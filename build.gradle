/*
 * *****************************************************************************
 * Copyright (C) 2020 Dennis Sheirer
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>
 * ****************************************************************************
 */

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

sourceCompatibility = 11

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.9.8'
    compile 'ch.qos.logback:logback-classic:1.2.3'
    compile 'org.slf4j:slf4j-api:1.7.25'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

group 'io.github.dsheirer'
archivesBaseName = "radio-reference-api"
version '15.1.8'

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")
ext.moduleName = 'io.github.dsheirer.rrapi'

compileJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}

javadoc {
    options.addBooleanOption('html5', true)
    options.addStringOption('-module-path', classpath.asPath)
}

task packageJavadoc(type: Jar, dependsOn: 'javadoc') {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

task packageSources(type: Jar, dependsOn: 'classes') {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId 'radio-reference-api'
            from components.java
            artifact packageSources
            artifact packageJavadoc
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'radioreference.com web services Java client'
                description = 'Java client library for radioreference.com web services'
                url = 'https://github.com/DSheirer/radio-reference-api'
                licenses {
                    license {
                        name = 'GNU General Public License, Version 3.0'
                        url = 'https://www.gnu.org/licenses/gpl-3.0.en.html'
                    }
                }

                developers {
                    developer {
                        id = 'dsheirer'
                        name = 'Dennis Sheirer'
                        email = 'dsheirer@sonatype.com'
                        organizationUrl = 'https://github.com/DSheirer'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/DSheirer/radio-reference-api.git'
                    developerConnection = 'scm:git:ssh://github.com/DSheirer/radio-reference-api.git'
                    url = 'https://github.com/DSheirer/radio-reference-api/tree/master'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
}

processResources {
    exclude('logback.xml')
}

signing {
    sign publishing.publications.mavenJava
}

artifacts {
    archives packageJavadoc, packageSources
}

jar {
    manifest {
        attributes 'Implementation-Title': "${project.archivesBaseName}",
                   'Implementation-Version': archiveVersion
    }
}
